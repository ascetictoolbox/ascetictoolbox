---
swagger: "2.0"
info:
  version: "0.0.2"
  title: "ASCETIC SaaS Knowledge Base"
paths:
  /experiments:
    get:
      description: "Gets `Experiments` objects.\n"
      operationId: "experimentsGet"
      produces:
      - "application/json"
      - "application/xml"
      parameters: []
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Experiment"
      x-swagger-router-controller: "Default"
    post:
      description: "Push an `experiment` object"
      operationId: "experimentsPost"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "experiment object to be pushed"
        required: true
        schema:
          $ref: "#/definitions/Experiment"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Experiment"
        400:
          description: "Invalid Experiment"
      x-swagger-router-controller: "Default"
  /experiments/{expid}:
    get:
      description: "Gets `Experiments` object.\n"
      operationId: "experimentGet"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "expid"
        in: "path"
        description: "id of the experiment to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/Experiment"
      x-swagger-router-controller: "Default"
  /experiments/{expid}/events:
    get:
      description: "Gets the list of event for a specific experiment\n"
      operationId: "eventGet"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "expid"
        in: "path"
        description: "id of the experiment to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Event"
      x-swagger-router-controller: "Default"
  /experiments/{expid}/kpis:
    get:
      description: "Gets the list of kpis for a specific experiment\n"
      operationId: "experimentKPISGet"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "expid"
        in: "path"
        description: "id of the experiment to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/KPI"
      x-swagger-router-controller: "Default"
  /experiments/{expid}/snapshots:
    get:
      description: "Gets the list of event for a specific experiment\n"
      operationId: "experimentSnapshotGet"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "expid"
        in: "path"
        description: "id of the experiment to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Snapshot"
      x-swagger-router-controller: "Default"
  /snapshots:
    get:
      description: "Gets `Snapshot` objects according to a specific experiments.\n"
      operationId: "snapshotsGet"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "expId"
        in: "query"
        description: "Experiment's ID"
        required: false
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Snapshot"
      x-swagger-router-controller: "Default"
    post:
      description: "Push an `Snapshot` object"
      operationId: "snapshotsPost"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Snapshot object to be pushed"
        required: true
        schema:
          $ref: "#/definitions/Snapshot"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Snapshot"
        400:
          description: "Invalid Snapshot"
      x-swagger-router-controller: "Default"
  /snapshots/{snapid}:
    get:
      description: "Get `Snapshot` object according.\n"
      operationId: "snapshotGet"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "snapid"
        in: "path"
        description: "snapshotId"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/SnapshotLess"
      x-swagger-router-controller: "Default"
  /snapshots/{snapid}/measurebyevent:
    get:
      description: "Get `Snapshot` object according.\n"
      operationId: "snapshotMeasureByEventGet"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "snapid"
        in: "path"
        description: "snapshotId"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EventWithMeasure"
      x-swagger-router-controller: "Default"
  /snapshots/{snapid}/measures:
    get:
      description: "Get `Snapshot` object according.\n"
      operationId: "snapshotMeasuresGet"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "snapid"
        in: "path"
        description: "snapshotId"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Measure"
      x-swagger-router-controller: "Default"
  /snapshots/{snapid}/vms:
    get:
      description: "Get `Snapshot` object according.\n"
      operationId: "snapshotVMsGet"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "snapid"
        in: "path"
        description: "snapshotId"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/VM"
      x-swagger-router-controller: "Default"
definitions:
  Experiment:
    type: "object"
    properties:
      _id:
        type: "string"
        description: "UUID"
      name:
        type: "string"
      description:
        type: "string"
      appId:
        type: "string"
      kpis:
        type: "array"
        description: "the list of KPIs used to analyze this experiment"
        items:
          $ref: "#/definitions/KPI"
      events:
        type: "array"
        description: "the list of events used to measure the current deployment"
        items:
          $ref: "#/definitions/Event"
  KPI:
    type: "object"
    properties:
      _id:
        type: "string"
        description: "UUID"
      name:
        type: "string"
      description:
        type: "string"
      metrics:
        type: "array"
        items:
          $ref: "#/definitions/Metric"
  Metric:
    type: "object"
    properties:
      _id:
        type: "string"
        description: "UUID"
      name:
        type: "string"
      description:
        type: "string"
      type:
        type: "string"
        description: "type of the metric (aggregated or simple)"
    description: "metrics"
  Event:
    type: "object"
    properties:
      _id:
        type: "string"
        description: "UUID"
      name:
        type: "string"
      description:
        type: "string"
  EventWithMeasure:
    type: "object"
    properties:
      _id:
        type: "string"
        description: "UUID"
      name:
        type: "string"
      description:
        type: "string"
      measures:
        type: "array"
        items:
          $ref: "#/definitions/Measure"
  SnapshotLess:
    type: "object"
    properties:
      _id:
        type: "string"
        description: "UUID"
      experimentId:
        type: "string"
        description: "UUID of the experiment"
      name:
        type: "string"
      deplId:
        type: "string"
      deplName:
        type: "string"
      description:
        type: "string"
      date:
        type: "string"
        format: "date-time"
  Snapshot:
    type: "object"
    properties:
      _id:
        type: "string"
        description: "UUID"
      experimentId:
        type: "string"
        description: "UUID of the experiment"
      name:
        type: "string"
      deplId:
        type: "string"
      deplName:
        type: "string"
      description:
        type: "string"
      date:
        type: "string"
        format: "date-time"
      vms:
        type: "array"
        description: "deployed Virtual machines"
        items:
          $ref: "#/definitions/VM"
      measures:
        type: "array"
        description: "list of computed measures"
        items:
          $ref: "#/definitions/Measure"
  VM:
    type: "object"
    properties:
      _id:
        type: "string"
        description: "UUID"
      vmId:
        type: "string"
      description:
        type: "string"
      events:
        type: "array"
        description: "List of event ID passing trought this vms"
        items:
          type: "string"
  Measure:
    type: "object"
    properties:
      _id:
        type: "string"
        description: "UUID"
      description:
        type: "string"
      refersTo:
        type: "array"
        description: "list of items (scope) on which the measure has been computed"
        items:
          $ref: "#/definitions/Item"
      value:
        type: "string"
        description: "measure value"
      metric:
        type: "string"
        description: "id of the metric"
  Item:
    type: "object"
    properties:
      category:
        type: "string"
        description: "Item category (VM, event) describing a part of a scope"
      name:
        type: "string"
        description: "specific name of the targeted item (event name for example)"
      reference:
        type: "string"
        description: "Complete item reference (depending on the item)"
