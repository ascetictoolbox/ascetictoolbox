package eu.ascetic.saas.applicationpackager.ide.wizards;



import org.eclipse.jface.wizard.WizardPage;
import org.eclipse.swt.SWT;
import org.eclipse.swt.custom.StyledText;
import org.eclipse.swt.graphics.Color;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Label;

import eu.ascetic.paas.applicationmanager.model.Application;
import eu.ascetic.paas.applicationmanager.model.Deployment;
import eu.ascetic.saas.applicationpackager.appmanager.client.AppManagerClientHC;

public class XmlResponseAppManViewerWizardPage extends WizardPage {

	private Composite container;
	private StyledText styledText;
	private Label lbAppValue;
	private Label lbDeploymentIdValue;
	private Label lbDeploymentStatusValue;
	private Label lbErrorName;
	private Label lbErrorValue;
	private Application app;
	
	protected XmlResponseAppManViewerWizardPage() {
		super("XML generated by ASCETiC Application Manager");
		setTitle("XML generated by ASCETiC Application Manager");
		setDescription("XML generated by ASCETiC Application Manager. Click Finish to end");
		setControl(styledText);
	}

	@Override
	public void createControl(Composite parent) {
		container = new Composite(parent, SWT.NONE);
		GridLayout layout = new GridLayout();
		container.setLayout(layout);
		layout.numColumns = 2;
		
		Label lbAppName = new Label(container, SWT.NONE);
		lbAppName.setText("Application:");
		
		lbAppValue = new Label(container, SWT.NONE);
		lbAppValue.setText("                                                      ");
		
		Label lbDeploymentIdName = new Label(container, SWT.NONE);
		lbDeploymentIdName.setText("Deployment ID:");
		
		lbDeploymentIdValue = new Label(container, SWT.NONE);
		lbDeploymentIdValue.setText("                                              ");
		
		Label lbDeploymentStatusName = new Label(container, SWT.NONE);
		lbDeploymentStatusName.setText("Status:");
		
		lbDeploymentStatusValue = new Label(container, SWT.NONE);
		lbDeploymentStatusValue.setText("                                              ");
		Color red = new Color(super.getShell().getDisplay(), 255, 0, 0); 
//		lbDeploymentStatusValue.setForeground(red);
		
		lbErrorName = new Label(container, SWT.NONE);
		lbErrorName.setText("Error:");
		lbErrorName.setVisible(false);
		
		lbErrorValue = new Label(container, SWT.NONE);
		lbErrorValue.setText("                                                                                          ");
		lbErrorValue.setVisible(false);
		lbErrorValue.setForeground(red);
		
		
		// required to avoid an error in the system
		setControl(container);
		//setPageComplete(false);
		setPageComplete(false);
		
	}

	public void setContent(Application app) {
		// TODO Auto-generated method stub
		this.app = app;
		updateFields();
		waitToFinish();
	}

	private void waitToFinish() {
		String status = "";
		if (app.getDeployments() != null){
			Deployment deployment = app.getDeployments().get(0);
			if (deployment != null){
				status = deployment.getStatus();
				AppManagerClientHC appManClient = new AppManagerClientHC();
				Deployment dep;
				while (!status.equalsIgnoreCase("Deployed") && !status.equalsIgnoreCase("ERROR")){
					dep = appManClient.getDeployment(app.getName() + "", deployment.getId() + "");
					status = dep.getStatus();
					lbDeploymentStatusValue.setText(status);
				}
				
				Color c = null;
				if (status.equalsIgnoreCase("Deployed")){
					c = new Color(super.getShell().getDisplay(), 0, 255, 0);				
				}	
				else if (status.equalsIgnoreCase("ERROR")) {
					c = new Color(super.getShell().getDisplay(), 255, 0, 0);
				}
				if (c!=null){
					lbDeploymentStatusValue.setForeground(c);
				}
				setPageComplete(true);
			}
		}	
	}
	

	private void updateFields(){
		lbAppValue.setText(app.getName());
		if (app.getDeployments() != null){
			Deployment d = app.getDeployments().get(0);
			if (d!=null){
				lbDeploymentIdValue.setText(d.getId() + "");
				lbDeploymentStatusValue.setText(d.getStatus());
			}
		}
	}
	
	public void setErrorUploadingApp(String msg) {
		// TODO Auto-generated method stub
		lbErrorName.setVisible(true);
		lbErrorValue.setVisible(true);
		lbErrorValue.setText(msg);
		setPageComplete(true);
	}

}
