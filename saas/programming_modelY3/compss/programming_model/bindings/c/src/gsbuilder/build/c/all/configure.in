
dnl Process this file with autoconf to produce a configure script.
AC_INIT()

AM_INIT_AUTOMAKE(all, 0.0.0)

AC_CANONICAL_HOST

AC_MSG_CHECKING([if we should activate AIX workarounds])
case $host_os in
	aix*)
		AC_MSG_RESULT([yes])
		CC=xlc
		CXX=xlC
		LD=xlC
		LDFLAGS="-brtl -bmaxdata:0x70000000"
		IS_AIX=yes
		AC_SUBST(IS_AIX)
		break;
		;;
	*)
		AC_MSG_RESULT([no])
		break;
		;;
esac
dnl Common config script configuration variables
EXEC_ENV=execution_env
PROG_LANG="C"
MODE="ALL"

AC_SUBST(EXEC_ENV)
AC_SUBST(PROG_LANG)
AC_SUBST(MODE)

dnl Checks for programs.
AC_PROG_CC
AC_PROG_CXX
AC_PROG_INSTALL
#AC_PATH_PROG(SH, bash, none)
#AC_PATH_PROG(SSH, ssh, none)
#AC_PATH_PROG(CP, cp, none)
#AC_PATH_PROG(SCP, scp, none)
#AC_PATH_PROG(BASH, bash, none)
#AC_PATH_PROG(MV, mv, none)
#AC_PATH_PROG(RM, rm, none)
#AC_PATH_PROG(LN, ln, none)
#AC_PATH_PROG(MKDIR, mkdir, none)
#AC_PATH_PROG(MKTEMP, mktemp, none)
#AC_PATH_PROG(CHMOD, chmod, none)
#AC_PATH_PROG(CSH, csh, none)
#AC_PATH_PROG(CAT, cat, none)
#AC_PATH_PROG(SED, sed, none)
#AC_PATH_PROG(SRUN, srun, none)
#AC_PATH_PROG(SL_MACHINE_LIST, sl_get_machine_list, none)
#AC_PATH_PROG(LL_MACHINE_LIST, ll_get_machine_list, none)
#AC_PATH_PROG(SLEEP, sleep, none)
#AC_PATH_PROG(GREP, grep, none)
#AC_PATH_PROG(PS, ps, none)
#AC_PATH_PROG(QUEUE_SUBMIT_PBS, qsub, none)
#AC_PATH_PROG(QUEUE_SUBMIT_LL, llsubmit, none)


#for comm in $SH $SSH $CP $SCP $MV $BASH $RM $LN $MKDIR $MKTEMP $CHMOD $CSH $CAT $SED $SLEEP $GREP $PS; do
#	if test x"$comm" = x"none" ; then
#		AC_MSG_ERROR([ Required commands missing. Please check that your path is correct ])
#	fi
#done

AC_PATH_PROG(GSSTUBGEN, gsstubgen, none)
if test x"$GSSTUBGEN" = x"none" ; then
        AC_MSG_ERROR([required gsstubgen program missing])
fi

dnl Initialize maintainer mode
AM_MAINTAINER_MODE

AC_ARG_WITH([cs-prefix],
	[  --with-cs-prefix=[prefix]  set the prefix under which the Grid Superscalar library is installed],
	[
		LIBS=-L$withval/lib $LIBS
		CPPFLAGS="-I$withval/include $CPPFLAGS"
	]
)
dnl Checks for libraries.
AC_CHECK_LIB(GS-master, GS_On,, [ AC_MSG_ERROR([Required Master Grid Supercalar library cannot be found]) ])
AC_CHECK_LIB(GS-worker, IniWorker,, [ AC_MSG_ERROR([Required Worker Grid Supercalar library cannot be found]) ])

dnl Check if classads are supported. Variable set at library instalation time
AM_CONDITIONAL(USE_CLASSADS, test x"CLASSADS_SUPPORT" == x"yes")
if test x"CLASSADS_SUPPORT" == x"yes" ; then
	AC_ARG_WITH([classads],
        	[  --with-classads=[prefix]  set the classads installation to be used],
        	[	
                	ac_cv_use_classads=$withval
                	LIBS="-L$ac_cv_use_classads/lib $LIBS"
                	CPPFLAGS="$CPPFLAGS -I$ac_cv_use_classads/include"
        	]
	)
        AC_LANG([C++])
        AC_CHECK_HEADER(classad_distribution.h,
        	[],
                [AC_MSG_ERROR([classads include files not found])]
        )
        AC_CHECK_LIB([classad], [cclassad_create],
        	[ LIBS="$LIBS -lclassad" ],
                [ AC_MSG_ERROR([classad library cannot be found]) ]
        )
        AC_LANG([C])
fi
dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h limits.h unistd.h)
AC_CHECK_HEADERS(gs_base64.h GS_master.h GS_worker.h param_metadata.h, [], [AC_MSG_ERROR([GRID superscalar header files could not be found])])

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_MODE_T
AC_TYPE_SIZE_T
AC_TYPE_SIGNAL

dnl Checks for library functions.
AC_CHECK_FUNCS(putenv socket strstr strtod)

AC_OUTPUT(Makefile)
