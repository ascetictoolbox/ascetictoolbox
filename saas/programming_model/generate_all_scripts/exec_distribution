#!/bin/bash

  #---------------------------------------------------------------------------------------------------------------------
  # Functions
  #---------------------------------------------------------------------------------------------------------------------
  usage() {
    echo "***********************************************************"
    echo " "
    echo "  Usage: main <vm_type> <log_base_folder> <package_base_folder> <tests_source_folder>"
    echo " "
    echo "- Available vm_types: ubuntu / opensuse / centos / debian"
    echo "- Log, package and tests folders refer to the base of this distribution"
    echo " "
    echo "***********************************************************"
  }

  display_error() {
    local errMsg=$1
    echo " "
    echo "ERROR: $errMsg"
    echo " "
  }

  shutdownVM() {
    local snapshot=$1
    shutdownError=0
    echo -e "\e[0m"
    echo "*************************"
    echo "*** Shutdown Base VM  ***"
    echo "*************************"
    echo -e "\e[0m"
    ${script_dir}/manageVM/shutdown_VM ${snapshot} ${vm_id} ${vm_type} ${log_folder}
    shutdownError=$?
  }


  #---------------------------------------------------------------------------------------------------------------------
  # MAIN PROGRAM
  #---------------------------------------------------------------------------------------------------------------------
  #Define user variables
  jenkins_job="COMPSs_Framework_Trunk"                                #Jenkins Trunk job name
  package_creation_folder=/builders/packages/                         #Folder from trunk dir where COMPSs packages are stored
  vm_user=user                                                        #VM default user


  #---------------------------------------------------------------------------------------------------------------------
  # WARNING: DO NOT MODIFY ANYTHING BELOW THIS MESSAGE UNLESS YOU KNOW WHAT YOU ARE DOING
  #---------------------------------------------------------------------------------------------------------------------
  #Get parameters
  vm_type=$1
  log_folder=$2
  jenkins_package_folder=$3

  #Check parameters
  if [[ "$#" -ne 3 ]]; then
     display_error "Incorrect number of parameters"
     usage
     exit 1
  fi

  if [ "${vm_type}" != "ubuntu" ] && [ "${vm_type}" != "suse" ] && [ "${vm_type}" != "centos" ] && [ "${vm_type}" != "debian" ]; then
     display_error "Bad vm_type parameter"
     usage
     exit 1
  fi

  #Define script variables
  script_dir=$(dirname $0)
  tests_source_folder=${script_dir}/tests/test_${vm_type}
  shutdownError=0

  #---------------------------------------------------------------------------------------------------------------------
  #Prepare vm to lauch tests.
  echo -e "\e[0m"
  echo "***********************"
  echo "*** Create Base VM  ***"
  echo "***********************"
  echo -e "\e[0m"
  ${script_dir}/manageVM/create_VM ${vm_type} ${vm_user} > ${log_folder}/creation.log
  if [ $? -ne 0 ]; then
     display_error "Cannot prepare VM"
     exit 1
  fi

  #Recieve vm_id, vm_ip and template_id
  vm_id=$(cat ${log_folder}/creation.log | grep "vm_id=" | cut -c 7- | tr -d '\r')
  if [ $? -ne 0 ]; then
     display_error "Cannot obtain vm_id"
     shutdownVM "false"
     if [ $shutdownError -ne 0 ]; then
        display_error "Cannot shutdown VM"
     fi
     exit 1
  fi

  vm_ip=$(cat ${log_folder}/creation.log | grep "ip=" | cut -c 4-)
  if [ $? -ne 0 ]; then
     display_error "Cannot obtain vm_ip"
     shutdownVM "false"
     if [ $shutdownError -ne 0 ]; then
        display_error "Cannot shutdown VM"
     fi
     exit 1
  fi


  #---------------------------------------------------------------------------------------------------------------------
  #Create packages
  ${script_dir}/packages/main ${vm_ip} ${vm_type} ${vm_user} ${jenkins_package_folder} ${package_creation_folder}/${vm_type}
  if [ $? -ne 0 ]; then
     display_error "COMPSs compile, build and package FAILED"
     shutdownVM "false"
     if [ $shutdownError -ne 0 ]; then
        display_error "Cannot shutdown VM"
     fi
     exit 1
  fi

  #---------------------------------------------------------------------------------------------------------------------
  #Deploy unstable packages to repository
  ${script_dir}/repos/main ${jenkins_job} ${vm_type} "unstable"
  if [ $? -ne 0 ]; then
     display_error "Deploying UNSTABLE packages FAILED"
     shutdownVM "false"
     if [ $shutdownError -ne 0 ]; then
        display_error "Cannot shutdown VM"
     fi
     exit 1
  fi

  #---------------------------------------------------------------------------------------------------------------------
  #Installing COMPSs from repository
  ${script_dir}/installation/main ${vm_ip} ${vm_type} ${vm_user}
  if [ $? -ne 0 ]; then
     display_error "COMPSs installation FAILED"
     shutdownVM "false"
     if [ $shutdownError -ne 0 ]; then
        display_error "Cannot shutdown VM"
     fi
     exit 1
  fi

 
  #---------------------------------------------------------------------------------------------------------------------
  #Run tests
  ${script_dir}/tests/main ${vm_type} ${vm_ip} ${vm_user} ${tests_source_folder}
  #if [ $? -ne 0 ]; then
  #   display_error "Tests FAILED"
  #   #Recover tests logs
  #   ${script_dir}/tests_post_process/main ${vm_ip} ${vm_user} ${log_folder} "failed"
  #   if [ $? -ne 0 ]; then
  #     display_error "Cannot recover tests logs"
  #   fi
  #   shutdownVM "false"
  #   if [ $shutdownError -ne 0 ]; then
  #      display_error "Cannot shutdown VM"
  #   fi
  #   exit 1
  #fi

  #---------------------------------------------------------------------------------------------------------------------
  #Tests post-process
  ${script_dir}/tests_post_process/main ${vm_ip} ${vm_user} ${log_folder} "ok"
  if [ $? -ne 0 ]; then
     display_error "Cannot recover tests logs"
     shutdownVM "false"
     if [ $shutdownError -ne 0 ]; then
        display_error "Cannot shutdown VM"
     fi
     exit 1
  fi

  #---------------------------------------------------------------------------------------------------------------------
  #Shutdown VM and snapshot it if needed
  shutdownVM "true"
  if [ $shutdownError -ne 0 ]; then 
     display_error "Cannot shutdown VM"
     exit 1
  fi


  #---------------------------------------------------------------------------------------------------------------------
  #Deploy testing packages to repository
  ${script_dir}/repos/main ${jenkins_job} ${vm_type} "testing"
  if [ $? -ne 0 ]; then
     display_error "Deploying TESTING packages FAILED"
     shutdownVM "false"
     if [ $shutdownError -ne 0 ]; then
        display_error "Cannot shutdown VM"
     fi
     exit 1
  fi


  #---------------------------------------------------------------------------------------------------------------------
  #End value
  echo " "
  echo " CONGRATULATIONS! The ${vm_type} process succeeded"
  echo " "
  exit 0

