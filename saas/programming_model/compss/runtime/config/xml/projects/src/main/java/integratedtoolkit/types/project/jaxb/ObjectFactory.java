//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.08.01 at 05:42:21 PM CEST 
//


package integratedtoolkit.types.project.jaxb;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the integratedtoolkit.types.project.jaxb package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Project_QNAME = new QName("", "Project");
    private final static QName _ImageTypeInstallDir_QNAME = new QName("", "InstallDir");
    private final static QName _ImageTypeWorkingDir_QNAME = new QName("", "WorkingDir");
    private final static QName _ImageTypeUser_QNAME = new QName("", "User");
    private final static QName _ImageTypeApplication_QNAME = new QName("", "Application");
    private final static QName _ImageTypeLimitOfTasks_QNAME = new QName("", "LimitOfTasks");
    private final static QName _ImageTypePackage_QNAME = new QName("", "Package");
    private final static QName _ImageTypeAdaptors_QNAME = new QName("", "Adaptors");
    private final static QName _AdaptorTypeSubmissionSystem_QNAME = new QName("", "SubmissionSystem");
    private final static QName _AdaptorTypePorts_QNAME = new QName("", "Ports");
    private final static QName _AdaptorTypeBrokerAdaptor_QNAME = new QName("", "BrokerAdaptor");
    private final static QName _AdaptorTypeProperties_QNAME = new QName("", "Properties");
    private final static QName _CloudTypeCloudProvider_QNAME = new QName("", "CloudProvider");
    private final static QName _CloudTypeInitialVMs_QNAME = new QName("", "InitialVMs");
    private final static QName _CloudTypeMinimumVMs_QNAME = new QName("", "MinimumVMs");
    private final static QName _CloudTypeMaximumVMs_QNAME = new QName("", "MaximumVMs");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: integratedtoolkit.types.project.jaxb
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link ProjectType }
     * 
     */
    public ProjectType createProjectType() {
        return new ProjectType();
    }

    /**
     * Create an instance of {@link MasterNodeType }
     * 
     */
    public MasterNodeType createMasterNodeType() {
        return new MasterNodeType();
    }

    /**
     * Create an instance of {@link ComputeNodeType }
     * 
     */
    public ComputeNodeType createComputeNodeType() {
        return new ComputeNodeType();
    }

    /**
     * Create an instance of {@link DataNodeType }
     * 
     */
    public DataNodeType createDataNodeType() {
        return new DataNodeType();
    }

    /**
     * Create an instance of {@link ServiceType }
     * 
     */
    public ServiceType createServiceType() {
        return new ServiceType();
    }

    /**
     * Create an instance of {@link CloudType }
     * 
     */
    public CloudType createCloudType() {
        return new CloudType();
    }

    /**
     * Create an instance of {@link AttachedDisksListType }
     * 
     */
    public AttachedDisksListType createAttachedDisksListType() {
        return new AttachedDisksListType();
    }

    /**
     * Create an instance of {@link AttachedDiskType }
     * 
     */
    public AttachedDiskType createAttachedDiskType() {
        return new AttachedDiskType();
    }

    /**
     * Create an instance of {@link PriceType }
     * 
     */
    public PriceType createPriceType() {
        return new PriceType();
    }

    /**
     * Create an instance of {@link ApplicationType }
     * 
     */
    public ApplicationType createApplicationType() {
        return new ApplicationType();
    }

    /**
     * Create an instance of {@link AdaptorsListType }
     * 
     */
    public AdaptorsListType createAdaptorsListType() {
        return new AdaptorsListType();
    }

    /**
     * Create an instance of {@link AdaptorType }
     * 
     */
    public AdaptorType createAdaptorType() {
        return new AdaptorType();
    }

    /**
     * Create an instance of {@link SubmissionSystemType }
     * 
     */
    public SubmissionSystemType createSubmissionSystemType() {
        return new SubmissionSystemType();
    }

    /**
     * Create an instance of {@link BatchType }
     * 
     */
    public BatchType createBatchType() {
        return new BatchType();
    }

    /**
     * Create an instance of {@link InteractiveType }
     * 
     */
    public InteractiveType createInteractiveType() {
        return new InteractiveType();
    }

    /**
     * Create an instance of {@link NIOAdaptorProperties }
     * 
     */
    public NIOAdaptorProperties createNIOAdaptorProperties() {
        return new NIOAdaptorProperties();
    }

    /**
     * Create an instance of {@link ExternalAdaptorProperties }
     * 
     */
    public ExternalAdaptorProperties createExternalAdaptorProperties() {
        return new ExternalAdaptorProperties();
    }

    /**
     * Create an instance of {@link PropertyAdaptorType }
     * 
     */
    public PropertyAdaptorType createPropertyAdaptorType() {
        return new PropertyAdaptorType();
    }

    /**
     * Create an instance of {@link CloudProviderType }
     * 
     */
    public CloudProviderType createCloudProviderType() {
        return new CloudProviderType();
    }

    /**
     * Create an instance of {@link ImagesType }
     * 
     */
    public ImagesType createImagesType() {
        return new ImagesType();
    }

    /**
     * Create an instance of {@link ImageType }
     * 
     */
    public ImageType createImageType() {
        return new ImageType();
    }

    /**
     * Create an instance of {@link PackageType }
     * 
     */
    public PackageType createPackageType() {
        return new PackageType();
    }

    /**
     * Create an instance of {@link SoftwareListType }
     * 
     */
    public SoftwareListType createSoftwareListType() {
        return new SoftwareListType();
    }

    /**
     * Create an instance of {@link InstanceTypesType }
     * 
     */
    public InstanceTypesType createInstanceTypesType() {
        return new InstanceTypesType();
    }

    /**
     * Create an instance of {@link InstanceTypeType }
     * 
     */
    public InstanceTypeType createInstanceTypeType() {
        return new InstanceTypeType();
    }

    /**
     * Create an instance of {@link CloudPropertiesType }
     * 
     */
    public CloudPropertiesType createCloudPropertiesType() {
        return new CloudPropertiesType();
    }

    /**
     * Create an instance of {@link CloudPropertyType }
     * 
     */
    public CloudPropertyType createCloudPropertyType() {
        return new CloudPropertyType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProjectType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Project")
    public JAXBElement<ProjectType> createProject(ProjectType value) {
        return new JAXBElement<ProjectType>(_Project_QNAME, ProjectType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "InstallDir", scope = ImageType.class)
    public JAXBElement<String> createImageTypeInstallDir(String value) {
        return new JAXBElement<String>(_ImageTypeInstallDir_QNAME, String.class, ImageType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "WorkingDir", scope = ImageType.class)
    public JAXBElement<String> createImageTypeWorkingDir(String value) {
        return new JAXBElement<String>(_ImageTypeWorkingDir_QNAME, String.class, ImageType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "User", scope = ImageType.class)
    public JAXBElement<String> createImageTypeUser(String value) {
        return new JAXBElement<String>(_ImageTypeUser_QNAME, String.class, ImageType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ApplicationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Application", scope = ImageType.class)
    public JAXBElement<ApplicationType> createImageTypeApplication(ApplicationType value) {
        return new JAXBElement<ApplicationType>(_ImageTypeApplication_QNAME, ApplicationType.class, ImageType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "LimitOfTasks", scope = ImageType.class)
    public JAXBElement<Integer> createImageTypeLimitOfTasks(Integer value) {
        return new JAXBElement<Integer>(_ImageTypeLimitOfTasks_QNAME, Integer.class, ImageType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PackageType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Package", scope = ImageType.class)
    public JAXBElement<PackageType> createImageTypePackage(PackageType value) {
        return new JAXBElement<PackageType>(_ImageTypePackage_QNAME, PackageType.class, ImageType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AdaptorsListType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Adaptors", scope = ImageType.class)
    public JAXBElement<AdaptorsListType> createImageTypeAdaptors(AdaptorsListType value) {
        return new JAXBElement<AdaptorsListType>(_ImageTypeAdaptors_QNAME, AdaptorsListType.class, ImageType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SubmissionSystemType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "SubmissionSystem", scope = AdaptorType.class)
    public JAXBElement<SubmissionSystemType> createAdaptorTypeSubmissionSystem(SubmissionSystemType value) {
        return new JAXBElement<SubmissionSystemType>(_AdaptorTypeSubmissionSystem_QNAME, SubmissionSystemType.class, AdaptorType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NIOAdaptorProperties }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Ports", scope = AdaptorType.class)
    public JAXBElement<NIOAdaptorProperties> createAdaptorTypePorts(NIOAdaptorProperties value) {
        return new JAXBElement<NIOAdaptorProperties>(_AdaptorTypePorts_QNAME, NIOAdaptorProperties.class, AdaptorType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "BrokerAdaptor", scope = AdaptorType.class)
    public JAXBElement<String> createAdaptorTypeBrokerAdaptor(String value) {
        return new JAXBElement<String>(_AdaptorTypeBrokerAdaptor_QNAME, String.class, AdaptorType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ExternalAdaptorProperties }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Properties", scope = AdaptorType.class)
    public JAXBElement<ExternalAdaptorProperties> createAdaptorTypeProperties(ExternalAdaptorProperties value) {
        return new JAXBElement<ExternalAdaptorProperties>(_AdaptorTypeProperties_QNAME, ExternalAdaptorProperties.class, AdaptorType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "User", scope = AdaptorType.class)
    public JAXBElement<String> createAdaptorTypeUser(String value) {
        return new JAXBElement<String>(_ImageTypeUser_QNAME, String.class, AdaptorType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CloudProviderType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CloudProvider", scope = CloudType.class)
    public JAXBElement<CloudProviderType> createCloudTypeCloudProvider(CloudProviderType value) {
        return new JAXBElement<CloudProviderType>(_CloudTypeCloudProvider_QNAME, CloudProviderType.class, CloudType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "InitialVMs", scope = CloudType.class)
    public JAXBElement<Integer> createCloudTypeInitialVMs(Integer value) {
        return new JAXBElement<Integer>(_CloudTypeInitialVMs_QNAME, Integer.class, CloudType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "MinimumVMs", scope = CloudType.class)
    public JAXBElement<Integer> createCloudTypeMinimumVMs(Integer value) {
        return new JAXBElement<Integer>(_CloudTypeMinimumVMs_QNAME, Integer.class, CloudType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "MaximumVMs", scope = CloudType.class)
    public JAXBElement<Integer> createCloudTypeMaximumVMs(Integer value) {
        return new JAXBElement<Integer>(_CloudTypeMaximumVMs_QNAME, Integer.class, CloudType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "InstallDir", scope = ComputeNodeType.class)
    public JAXBElement<String> createComputeNodeTypeInstallDir(String value) {
        return new JAXBElement<String>(_ImageTypeInstallDir_QNAME, String.class, ComputeNodeType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "WorkingDir", scope = ComputeNodeType.class)
    public JAXBElement<String> createComputeNodeTypeWorkingDir(String value) {
        return new JAXBElement<String>(_ImageTypeWorkingDir_QNAME, String.class, ComputeNodeType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "User", scope = ComputeNodeType.class)
    public JAXBElement<String> createComputeNodeTypeUser(String value) {
        return new JAXBElement<String>(_ImageTypeUser_QNAME, String.class, ComputeNodeType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ApplicationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Application", scope = ComputeNodeType.class)
    public JAXBElement<ApplicationType> createComputeNodeTypeApplication(ApplicationType value) {
        return new JAXBElement<ApplicationType>(_ImageTypeApplication_QNAME, ApplicationType.class, ComputeNodeType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "LimitOfTasks", scope = ComputeNodeType.class)
    public JAXBElement<Integer> createComputeNodeTypeLimitOfTasks(Integer value) {
        return new JAXBElement<Integer>(_ImageTypeLimitOfTasks_QNAME, Integer.class, ComputeNodeType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AdaptorsListType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Adaptors", scope = ComputeNodeType.class)
    public JAXBElement<AdaptorsListType> createComputeNodeTypeAdaptors(AdaptorsListType value) {
        return new JAXBElement<AdaptorsListType>(_ImageTypeAdaptors_QNAME, AdaptorsListType.class, ComputeNodeType.class, value);
    }

}
