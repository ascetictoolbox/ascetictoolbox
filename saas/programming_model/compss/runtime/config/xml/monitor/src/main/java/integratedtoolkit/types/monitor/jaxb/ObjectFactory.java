/**
 *
 *   Copyright 2014-2015 Barcelona Supercomputing Center (www.bsc.es) All rights reserved.
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.04 at 11:22:47 AM CEST 
//


package integratedtoolkit.types.monitor.jaxb;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the integratedtoolkit.types.monitor.jaxb package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _COMPSsState_QNAME = new QName("", "COMPSsState");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: integratedtoolkit.types.monitor.jaxb
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link COMPSsStateType }
     * 
     */
    public COMPSsStateType createCOMPSsStateType() {
        return new COMPSsStateType();
    }

    /**
     * Create an instance of {@link ApplicationType }
     * 
     */
    public ApplicationType createApplicationType() {
        return new ApplicationType();
    }

    /**
     * Create an instance of {@link TasksInfoType }
     * 
     */
    public TasksInfoType createTasksInfoType() {
        return new TasksInfoType();
    }

    /**
     * Create an instance of {@link ResourceType }
     * 
     */
    public ResourceType createResourceType() {
        return new ResourceType();
    }

    /**
     * Create an instance of {@link ResourceInfoType }
     * 
     */
    public ResourceInfoType createResourceInfoType() {
        return new ResourceInfoType();
    }

    /**
     * Create an instance of {@link CoresInfoType }
     * 
     */
    public CoresInfoType createCoresInfoType() {
        return new CoresInfoType();
    }

    /**
     * Create an instance of {@link CoreType }
     * 
     */
    public CoreType createCoreType() {
        return new CoreType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link COMPSsStateType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "COMPSsState")
    public JAXBElement<COMPSsStateType> createCOMPSsState(COMPSsStateType value) {
        return new JAXBElement<COMPSsStateType>(_COMPSsState_QNAME, COMPSsStateType.class, null, value);
    }

}
