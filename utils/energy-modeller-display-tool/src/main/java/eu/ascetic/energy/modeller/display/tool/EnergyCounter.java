/**
 * Copyright 2015 University of Leeds
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
package eu.ascetic.energy.modeller.display.tool;

import eu.ascetic.asceticarchitecture.iaas.energymodeller.queryinterface.datasourceclient.HostDataSource;
import eu.ascetic.asceticarchitecture.iaas.energymodeller.queryinterface.datasourceclient.ZabbixDirectDbDataSourceAdaptor;
import java.util.Collection;
import java.util.Collections;
import java.util.List;
import javax.swing.DefaultListModel;

/**
 * This displays the energy usage of VMs and their hosts as a series of
 * incrementing counters.
 *
 * @author Richard Kavanagh
 */
public class EnergyCounter extends javax.swing.JFrame {

    CounterDataCollector collector;

    /**
     * Creates new instance of the energy counter form.
     */
    public EnergyCounter() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        centerPanel = new javax.swing.JPanel();
        listScroller = new javax.swing.JScrollPane();
        powerUsageList = new javax.swing.JList();
        southPanel = new javax.swing.JPanel();
        startStopButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Power Consumption on the Testbed");

        centerPanel.setLayout(new java.awt.GridLayout(1, 1));

        powerUsageList.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        powerUsageList.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        listScroller.setViewportView(powerUsageList);
        powerUsageList.getAccessibleContext().setAccessibleDescription("");

        centerPanel.add(listScroller);

        getContentPane().add(centerPanel, java.awt.BorderLayout.CENTER);

        southPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        startStopButton.setText("Stop Counting");
        startStopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startStopButtonActionPerformed(evt);
            }
        });
        southPanel.add(startStopButton);

        resetButton.setText("Reset Power Counters");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });
        southPanel.add(resetButton);
        resetButton.getAccessibleContext().setAccessibleName("Reset Counter");

        getContentPane().add(southPanel, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        collector.resetCounters();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void startStopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startStopButtonActionPerformed
        collector.setCount(!collector.isCount());
        if (collector.isCount()) {
            startStopButton.setText("Stop Counting");
        } else{
            startStopButton.setText("Start Counting");
        }
    }//GEN-LAST:event_startStopButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EnergyCounter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EnergyCounter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EnergyCounter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EnergyCounter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        EnergyCounter gui = new EnergyCounter();
        gui.setVisible(true);
        gui.collector = new CounterDataCollector(new ZabbixDirectDbDataSourceAdaptor());
        gui.collector.setListner(gui);
        new Thread(gui.collector).run();

    }

    private DefaultListModel model = new DefaultListModel();

    public void processDataAvailable(List<CounterData> data) {
        model.clear();
        Collections.sort(data);
        for (CounterData dataItem : data) {
            model.addElement(dataItem);
        }
        powerUsageList.setModel(model);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel centerPanel;
    private javax.swing.JScrollPane listScroller;
    private javax.swing.JList powerUsageList;
    private javax.swing.JButton resetButton;
    private javax.swing.JPanel southPanel;
    private javax.swing.JButton startStopButton;
    // End of variables declaration//GEN-END:variables
}
